### VARIABLES
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $otherMod Mod4+Shift


### KEYBOARD SETTINGS
input * {
    xkb_layout "gb"
    xkb_options caps:escape
    # swaymsg inputtype:keyboard xkb_layout "gb" to set keyboard layout at
    # runtime
}


### MOUSE/POINTER/CURSOR SETTINGS
seat seat0 xcursor_theme default 36
# may need to turn off this setting if I ever use blender
seat seat0 hide_cursor when-typing enable


### OUTPUT CONFIGURATION
# Wallpaper. Requires: desktop-backgrounds-compat, swaybg
output * bg /home/thom/Pictures/Profile_Pics/Evening_River.jpg fill

# fixing the zoom
# find outputs from swaymsg -t get_outputs (or xrandr --query on X11)
# wlr-randr can also be used to do this kind of stuff
output eDP-1 scale 1


# ### IDLE CONFIGURATION
bindsym $mod+i inhibit_idle open
bindsym $otherMod+i inhibit_idle none
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
    timeout 300 'brightnessctl set 20%- && notify-send "swaylock" "you still there buddy?"' resume 'brightnessctl set 20%+' \
    idleHint 600 \
    timeout 600 'swaylock -f' \
    timeout 900 'swaymsg "output * power off"' resume 'swaymsg output * power on'


### LAUNCH/CLOSE APPS
# kill focused window
bindsym $mod+q kill
bindsym {
    # Start your launcher
    $mod+a exec rofi -show drun
    $otherMod+a exec rofi -show filebrowser
    # other app shortcuts
    $mod+b exec firefox
    $mod+g exec alacritty -e "clifm"
    $mod+Return exec wezterm
    $otherMod+Return exec alacritty -e tmux
    $mod+t exec thunderbird
    $mod+v exec neovide
}


### META STUFF
bindsym {
    $otherMod+q exit
    $otherMod+Delete exit; exec brightnessctl set 100%; exec systemctl poweroff 
    $otherMod+c reload
}


### PRINT SCREEN
bindsym {
    Print exec grimshot --notify save output
    Ctrl+Print exec grimshot --notify save area
    Alt+Print exec grimshot --notify save active
}


### MOVE FOCUS
bindsym {
    $mod+w focus next
    Mod1+Tab focus next
    $mod+x focus prev
    Mod1+Shift+Tab focus prev
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
    $mod+Left   workspace prev
    $mod+Right  workspace next
    $mod+h workspace prev
    $mod+l workspace next
    $mod+Up exec swaymsg workspace \
        $(swaymsg --raw --type get_workspaces | jq '.[] | select(.focused) | .num | (. - 3) % 9')
    $mod+Down exec swaymsg workspace \
        $(swaymsg --raw --type get_workspaces | jq '.[] | select(.focused) | .num | (. + 3) % 9')
    $mod+k exec swaymsg workspace \
        $(swaymsg --raw --type get_workspaces | jq '.[] | select(.focused) | .num | (. - 3) % 9')
    $mod+j exec swaymsg workspace \
        $(swaymsg --raw --type get_workspaces | jq '.[] | select(.focused) | .num | (. + 3) % 9')
}


### MOVE WINDOWS
bindsym {
    $otherMod+h move left
    $otherMod+j move down
    $otherMod+k move up
    $otherMod+l move right
    # Ditto, with arrow keys
    $otherMod+Left     move left
    $otherMod+Down     move down
    $otherMod+Up       move up
    $otherMod+Right    move right
    # Move focused container to workspace
    $otherMod+1 move container to workspace number 1; workspace 1
    $otherMod+2 move container to workspace number 2; workspace 2
    $otherMod+3 move container to workspace number 3; workspace 3
    $otherMod+4 move container to workspace number 4; workspace 4
    $otherMod+5 move container to workspace number 5; workspace 5
    $otherMod+6 move container to workspace number 6; workspace 6
    $otherMod+7 move container to workspace number 7; workspace 7
    $otherMod+8 move container to workspace number 8; workspace 8
    $otherMod+9 move container to workspace number 9; workspace 9
    $otherMod+0 move container to workspace number 10; workspace 10
    # scratchpad/special workspace
    $otherMod+minus move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.


### LAYOUT
# default layout
workspace_layout default
bindsym {
    # Switch the current container between different layout styles
    $mod+s split toggle
    $mod+Mod1+l layout toggle split tabbed
    $mod+f fullscreen toggle
    $otherMod+space floating toggle
    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle
}


### RESIZE WINDOWS
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym {
        h resize shrink width 10px
        j resize grow height 10px
        k resize shrink height 10px
        l resize grow width 10px
        # Ditto, with arrow keys
        Left resize shrink width 10px
        Down resize grow height 10px
        Up resize shrink height 10px
        Right resize grow width 10px
        # Return to default mode
        Return mode "default"
        Escape mode "default"
    }
}
bindsym $mod+r mode "resize"


## WINDOW DECORATIONS
# get rid of those damn titlebars (except in tabbed mode)
default_border pixel 4
# hide_edge_borders both
smart_gaps on
gaps inner 0
smart_borders on
client.focused #1d6432cc #1d6432cc #ffffff


### MEDIA/HARDWARE CONTROLS
# this is used in the system config; included below
set $volume_step 2
bindsym {
    # for non-laptops
    $mod+F1 exec amixer sset Master toggle
    $mod+F2 exec amixer sset Master 2%-
    $mod+F3 exec amixer sset Master 2%+
    $mod+F4 exec playerctl play-pause
    $mod+F7 exec brightnessctl set 10%+
    $mod+F6 exec brightnessctl set 10%-
}


### NOTIFICATIONS
bindsym $mod+n exec makoctl dismiss

# AUTOSTART
exec --no-startup-id flatpak run com.ktechpit.whatsie
# exec --no-startup-id tlp start #needs root permissions

### IMPORTS
# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
